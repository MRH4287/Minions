 @inject IRepository<Asset> Repo
 @inject AssetService AssetService
@inject IDialogService Dialog
@inject PersistenceService PersistenceService
@implements IDisposable

 @page "/"
 @page "/{AssetId}/worker"


<SectionContent SectionName="SectionName.InHeader">
    @* <MudTextField Label="Hello World" Value="Asset.UnnamedRower.ToString()"></MudTextField>
    <MudSpacer />
    <MudText>Schiffs Klasse</MudText> *@
    <MudSpacer />
    <MudIconButton Icon="@Icons.Material.Filled.MoreTime" OnClick="@Time" />
</SectionContent>

<div class="general">

    <HeaderItem Header="Rower"
                SmallContentTitle="Number of Rowers"
                SmallContent="@(Asset.UnnamedRower.ToString())"
                ContentTitle="Number of Asset.Rowers  (including those with names)"
                Content="@(Asset.Rower.ToString())"
                ContentRightTitle="Sum of costs of all Asset.Rowers"
                ContentRight="@(Asset.SumOfCostsOfAllRowers.ToString())">
    </HeaderItem>
    <HeaderItem Header="Crew"
                SmallContentTitle="Number of Sailors"
                SmallContent="@(Asset.UnnamedSailor.ToString())"
                ContentTitle="Number of Sailors (including those with names)"
                Content="@(Asset.Sailors.ToString())"
                ContentRightTitle="Sum of all Sailor Costs"
                ContentRight="@(Asset.SumOfAllSailorCosts.ToString())">
    </HeaderItem>
    <HeaderItem Header="Money"
                Content="@(Asset.Money.ToString())"
                AddContent="@(async (money) => await AddMoney(money))"
                ContentRight="@(Broke.ToString())"
                EnableInteraction="true">
    </HeaderItem>
    <HeaderItem Header="Payment"
                Content="@(DailyPayment.ToString())">
    </HeaderItem>
    <HeaderItem Header="Current Payment"
                Content="@(CurrentPayment.ToString())">
    </HeaderItem>

</div>

<DisplayBlock Definition="null"></DisplayBlock>

@* @if (IsDebug)
{
    @if (Asset.DisplayBlocks != null)
    {
        @foreach (var block in Asset.DisplayBlocks)
        {
            <DisplayBlock Definition="block"></DisplayBlock>
        }

    }
    @* This is very bad code! Just for Testing!! * @
    <button @onclick="@(() => {
    Asset.DisplayBlocks ??= new List<DisplayBlockDefinition>();
    Asset.DisplayBlocks.Add(new DisplayBlockDefinition() {
        Name = "Test",
        Type = DisplayBlockDefinitionType.None
    });
    StateHasChanged();
})">
        Add Test-Elemenet
    </button>
}
 *@
<br />

<MudTabs Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="Crew">
        <NamedPersonalList Asset="Asset"
                           WorkerColumnPersistence="WorkerColumnPersistence"
                           AddChar="AddChar"
                           Pay="Pay"
                           Fire="Fire"
                           EditChar="EditChar"></NamedPersonalList>

    </MudTabPanel>






    <MudTabPanel Text="Generic Crew">
        <UnnamedPersonalList Asset="Asset"
                             GenericWorkerColumnPersistence="GenericWorkerColumnPersistence"
                             AddGenericWorkers="AddGenericWorkers"
                             Pay="Pay"
                             EditChar="EditChar"></UnnamedPersonalList>
    </MudTabPanel>





    <MudTabPanel Text="Finance">
        <FinanceList Asset="Asset">


        </FinanceList>
    </MudTabPanel>




    <MudTabPanel Text="Asset">
        <MudText>Content Four</MudText>
    </MudTabPanel>

</MudTabs>




